/*
 * Copyright (c) 2007-2013 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'eclipse'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
        maven { url 'http://repo.springsource.org/plugins-release' }
  }
  dependencies {
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.4'
  }
}

// gives 'provided' scope for hadoop
configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}


apply from: 'etc/version.gradle'

group = 'cascading'
version = releaseVersion

// the version of hadoop used for compiling and testing
ext.hadoopVersion = "1.1.2"

ext.cascadingVersion = '2.2.0-+'

// set property to use locally installed cascading builds
// otherwise wip releases will be pulled from conjars
if( System.properties[ 'cascading-provider-jdbc.release.local' ] ) 
      cascadingVersion = '2.2.0-wip-dev'

repositories{
    mavenLocal()
    mavenCentral()
    mavenRepo name: 'conjars', url: 'http://conjars.org/repo/'
}

dependencies{
    compile group: 'cascading', name: 'cascading-local', version: cascadingVersion
    compile group: 'cascading', name: 'cascading-hadoop', version: cascadingVersion

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1'
    testCompile group: 'cascading', name:'cascading-core', version: cascadingVersion, classifier: 'tests' 
    testCompile( group: 'org.apache.hadoop', name: 'hadoop-test', version: hadoopVersion ){
        exclude group: 'oro'
    }
    // used for database testing
    testCompile( group: 'org.hsqldb', name: 'hsqldb', version: '2.3.0')
    testCompile( group: 'org.apache.derby', name: 'derby', version: '10.10.1.1')
    testCompile( group: 'org.apache.derby', name: 'derbyclient', version: '10.10.1.1')
    testCompile( group: 'org.apache.derby', name: 'derbynet', version: '10.10.1.1')
    testCompile( group: 'mysql', name: 'mysql-connector-java', version: '5.1.25')
    testCompile( group: 'com.h2database', name:'h2', version: '1.3.173')

    provided( group: 'org.apache.hadoop', name: 'hadoop-core', version: hadoopVersion) { 
       exclude group: 'ant'
       exclude group: 'junit'
       exclude group: 'oro' // causes transient build maven failures, ftw
    }

    provided( group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1')
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}


eclipse{
    classpath{
        defaultOutputDir = file('build')
            downloadSources = true
            downloadJavadoc = false
    }
}
